{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2024-08-07T10:32:35.398Z",
    "end": "2024-08-07T10:32:52.424Z",
    "duration": 17026
  },
  "results": [
    {
      "uuid": "339849a1-5665-41d1-9545-911c0d150f3d",
      "title": "",
      "fullFile": "cypress\\e2e\\apiTest.spec.js",
      "file": "cypress\\e2e\\apiTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8a73528b-640d-45c1-9a11-ffca648ba4ef",
          "title": "Test API using mocks",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify correct request and responce",
              "fullTitle": "Test API using mocks Verify correct request and responce",
              "timedOut": null,
              "duration": 8872,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', 'https://conduit-api.bondaracademy.com/api/articles/').as('postArticle');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is the title');\ncy.get('[formcontrolname=\"description\"]').type('This is description');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticle').then(xhr => {\n  expect(xhr.response.statusCode).to.equal(201);\n  expect(xhr.request.body.article.body).to.equal('This is a body of article');\n  expect(xhr.response.body.article.body).to.equal('This is a body of article');\n});\ncy.get('button.btn.btn-sm.btn-outline-danger:contains(\"Delete Article\")').click({\n  multiple: true\n});",
              "err": {},
              "uuid": "1ad4bc01-0925-40e8-b0ea-6c5976a087e7",
              "parentUUID": "8a73528b-640d-45c1-9a11-ffca648ba4ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify tags are displayed",
              "fullTitle": "Test API using mocks Verify tags are displayed",
              "timedOut": null,
              "duration": 3829,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'Test').should('contain', 'Cypress Automation');",
              "err": {},
              "uuid": "6ab22f44-e1da-457f-aa10-28e3d4ddcc3d",
              "parentUUID": "8a73528b-640d-45c1-9a11-ffca648ba4ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify global feed likes count",
              "fullTitle": "Test API using mocks Verify global feed likes count",
              "timedOut": null,
              "duration": 3213,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', 'https://conduit-api.bondaracademy.com/api/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', 'https://conduit-api.bondaracademy.com/api/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(heartList => {\n  expect(heartList[0]).to.contain('999');\n});\ncy.fixture('articles').then(file => {\n  const articleLink = file.articles[0].slug;\n  file.articles[0].favoritesCount = 1000;\n  cy.intercept('POST', 'https://conduit-api.bondaracademy.com/api/articles/' + articleLink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(0).click().should('contain', '1000');",
              "err": {},
              "uuid": "e6184ffc-0993-417c-8f38-82de89c39172",
              "parentUUID": "8a73528b-640d-45c1-9a11-ffca648ba4ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ad4bc01-0925-40e8-b0ea-6c5976a087e7",
            "6ab22f44-e1da-457f-aa10-28e3d4ddcc3d",
            "e6184ffc-0993-417c-8f38-82de89c39172"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15914,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aeaad160-3c1f-4229-898d-2643ee4f9bf1",
          "title": "API Authentication",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Article via API and delete it",
              "fullTitle": "API Authentication Create Article via API and delete it",
              "timedOut": null,
              "duration": 992,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userCredentials = {\n  \"user\": {\n    \"email\": \"stas@stas.stas\",\n    \"password\": \"stas\"\n  }\n};\nconst bodyRequest = {\n  \"article\": {\n    \"title\": \"API Test\",\n    \"description\": \"API Test\",\n    \"body\": \"API Test\",\n    \"tagList\": [\"API Test\"]\n  }\n};\ncy.request('POST', Cypress.env('apiURL') + '/api/users/login', userCredentials).its('body').then(body => {\n  const token = body.user.token;\n  cy.wrap(token).as('authToken');\n});\n//Provide object to include header\ncy.get('@authToken').then(token => {\n  cy.request({\n    url: Cypress.env('apiURL') + '/api/articles/',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(201);\n    const articleSlug = response.body.article.slug;\n    cy.request({\n      url: Cypress.env('apiURL') + `/api/articles/${articleSlug}`,\n      headers: {\n        'Authorization': 'Token ' + token\n      },\n      method: 'DELETE'\n    }).then(deleteResponse => {\n      expect(deleteResponse.status).to.equal(204); // Assuming a 200 status for successful deletion\n    });\n  });\n});",
              "err": {},
              "uuid": "c55ac8c1-1bf0-4021-87c0-01a4eab017c7",
              "parentUUID": "aeaad160-3c1f-4229-898d-2643ee4f9bf1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c55ac8c1-1bf0-4021-87c0-01a4eab017c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 992,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}